// FlickWord: home-only visibility + relocation
(function () {
  const TABS = ['home','watching','wishlist','watched','discover','settings'];

  function getFlickWordEl() {
    return (
      document.getElementById('flickwordCard') ||
      document.getElementById('flickword') ||
      document.querySelector('.flickword-card, .daily-word, .flickword, [data-widget="flickword"]')
    );
  }
  function ensureInHome() {
    const el = getFlickWordEl();
    const home = document.getElementById('homeSection');
    if (el && home && !home.contains(el)) home.appendChild(el);
  }
  function activeTabName() {
    if (window.FlickletApp && FlickletApp.currentTab) return FlickletApp.currentTab;
    const id = document.querySelector('.tab.active')?.id;
    return id ? id.replace('Tab','') : 'home';
  }
  function updateVisibility() {
    const el = getFlickWordEl();
    if (!el) return;
    const show = activeTabName() === 'home';
    el.style.display = show ? '' : 'none';
    try { el.toggleAttribute('hidden', !show); } catch {}
  }
  function refresh(){ ensureInHome(); updateVisibility(); }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', refresh, { once: true });
  } else { refresh(); }

  TABS.forEach(n => {
    document.getElementById(n + 'Tab')?.addEventListener('click', () => setTimeout(refresh, 0));
  });

  if (window.FlickletApp) {
    if (typeof FlickletApp.switchToTab === 'function' && !FlickletApp.switchToTab.__fw) {
      const orig = FlickletApp.switchToTab;
      FlickletApp.switchToTab = function(tab){ const r = orig.apply(this, arguments); refresh(); return r; };
      FlickletApp.switchToTab.__fw = true;
    }
    if (typeof FlickletApp.updateTabVisibility === 'function' && !FlickletApp.updateTabVisibility.__fw) {
      const origU = FlickletApp.updateTabVisibility;
      FlickletApp.updateTabVisibility = function(){ const r = origU.apply(this, arguments); refresh(); return r; };
      FlickletApp.updateTabVisibility.__fw = true;
    }
  }

  const mo = new MutationObserver(() => {
    const el = getFlickWordEl();
    const home = document.getElementById('homeSection');
    if (el && home) { ensureInHome(); updateVisibility(); mo.disconnect(); }
  });
  mo.observe(document.body, { childList: true, subtree: true });
})();
